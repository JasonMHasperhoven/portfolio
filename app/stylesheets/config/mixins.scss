////////////
// Mixins //
////////////

@mixin animation($value) {
  -webkit-animation: $value;
          animation: $value;
}

@mixin animation-delay($value) {
  -webkit-animation-delay: $value;
          animation-delay: $value;
}

@mixin background-clip($value: padding-box) {
          background-clip: $value;

  -webkit-background-clip: $value;
     -moz-background-clip: $value;
}

@mixin border-radius($value: $border-radius, $important: false) {
  -webkit-border-radius: $value;
     -moz-border-radius: $value;
          border-radius: $value;
  @if $important == true {
    -webkit-border-radius: $value !important;
       -moz-border-radius: $value !important;
            border-radius: $value !important;
  }
}

@mixin border-radius-alt($corner, $value: $border-radius, $important: false) {
  @if $corner == top-right {
    -webkit-border-top-right-radius: $value;
    -moz-border-radius-topright: $value;
            border-top-right-radius: $value;
    @if $important == true {
      -webkit-border-top-right-radius: $value !important;
      -moz-border-radius-topright: $value !important;
              border-top-right-radius: $value !important;
    }
  }
  @else if $corner == bottom-right {
    -webkit-border-bottom-right-radius: $value;
    -moz-border-radius-bottomright: $value;
            border-bottom-right-radius: $value;
    @if $important == true {
      -webkit-border-bottom-right-radius: $value !important;
      -moz-border-radius-bottomright: $value !important;
              border-bottom-right-radius: $value !important;
    }
  }
  @else if $corner == bottom-left {
    -webkit-border-bottom-left-radius: $value;
    -moz-border-radius-bottomleft: $value;
            border-bottom-left-radius: $value;
    @if $important == true {
      -webkit-border-bottom-left-radius: $value !important;
      -moz-border-radius-bottomleft: $value !important;
              border-bottom-left-radius: $value !important;
    }
  }
  @else if $corner == top-left {
    -webkit-border-top-left-radius: $value;
    -moz-border-radius-topleft: $value;
            border-top-left-radius: $value;
    @if $important == true {
      -webkit-border-top-left-radius: $value !important;
      -moz-border-radius-topleft: $value !important;
              border-top-left-radius: $value !important;
    }
  }
}

@mixin box-shadow($string...) {
  -webkit-box-shadow: $string;
     -moz-box-shadow: $string;
          box-shadow: $string;

       -o-box-shadow: $string;
}

@mixin box-sizing($value: border-box) {
  -webkit-box-sizing: $value;
     -moz-box-sizing: $value;
          box-sizing: $value;

      -ms-box-sizing: $value;
}

@mixin opacity($opacity, $important: false) {
  $opperc: $opacity * 100;

  -ms-filter: progid:DXImageTransform.Microsoft.Alpha(opacity=#{$opperc});
  filter: alpha(opacity=$opperc);
          opacity: $opacity;

  -webkit-opacity: $opacity;
   -khtml-opacity: $opacity;
     -moz-opacity: $opacity;
  @if $important == true {
    $opperc: $opacity * 100;

    -ms-filter: progid:DXImageTransform.Microsoft.Alpha(opacity=#{$opperc}) !important;
    filter: alpha(opacity=$opperc) !important;
            opacity: $opacity !important;

    -webkit-opacity: $opacity !important;
     -khtml-opacity: $opacity !important;
       -moz-opacity: $opacity !important;
  }
}

@mixin transition($value...) {
  $value: if(length($value) == 0, all $transition-time, $value);

  -webkit-transition: $value;
          transition: $value;
}

@mixin transition-delay($value) {
  -webkit-transition-delay: $value;
          transition-delay: $value;
}

@mixin transition-duration($value) {
  -webkit-transition-duration: $value;
          transition-duration: $value;
}

@mixin transition-timing-function($value) {
  -webkit-transition-timing-function: $value;
          transition-timing-function: $value;
}

@mixin transform($value) {
  -webkit-transform: $value;
          transform: $value;
}

@mixin filter($value) {
  -webkit-filter: $value;
          filter: $value;
}